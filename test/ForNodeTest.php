<?php

namespace SSql\Sql;

require_once dirname(dirname(__FILE__)) . "/src/SSql.php";
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-05 at 10:09:50.
 */
class ForNodeTest extends \PHPUnit_Framework_TestCase {

    /**
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
  	}

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }

    public function test1() {
		$sql = "/*BEGIN*//*FOR userList*//*NEXT 'and '*/username like /*#current*/'kato'/*END*//*END*/";
		$an = new SqlAnalyzer($sql);
		$node = $an->analyze();
		$param = array('userList' => array('sato', 'suzuki', 'takahashi'));
		$context = Context\CommandContext::createCommandContext($param);
		$node->acceptContext($context);
		echo $testSql = $context->getSql();
		$this->assertSame("username like ? and username like ? and username like ?", $testSql);	
   }

    public function test2() {
		$sql = "/*BEGIN*/where /*FOR userList*//*FIRST*/and (/*END*//*NEXT 'or '*/username like /*#current*/'kato'/*LAST*/)/*END*//*END*//*END*/";
		$an = new SqlAnalyzer($sql);
		$node = $an->analyze();
		$param = array('userList' => array('sato', 'suzuki', 'takahashi'));
		$context = Context\CommandContext::createCommandContext($param);
		$node->acceptContext($context);
		echo $testSql = $context->getSql();
		$this->assertSame("where (username like ? or username like ? or username like ?)", $testSql);	
   }

    public function test3() {
		$sql = "/*BEGIN*/where /*IF id != null*/id = /*id*/3/*END*//*FOR userList*//*FIRST*/ and (/*END*//*NEXT 'or '*/username like /*#current*/'kato'/*LAST*/)/*END*//*END*//*END*/";
		$an = new SqlAnalyzer($sql);
		$node = $an->analyze();
		$param = array('userList' => array('sato', 'suzuki', 'takahashi')
						, 'id' => 3);
		$context = Context\CommandContext::createCommandContext($param);
		$node->acceptContext($context);
		echo $testSql = $context->getSql();
		$this->assertSame("where id = ? and (username like ? or username like ? or username like ?)", $testSql);	
   }


}